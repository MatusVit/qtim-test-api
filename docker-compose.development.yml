version: '3.9'

services:
  # api:
  #   container_name: '${SERVER_NAME}-dev'
  #   build:
  #     dockerfile: ./docker/api/Dockerfile
  #     context: .
  #     target: development
  #   image: '${SERVER_IMAGE_NAME}-dev'
  #   restart: unless-stopped
  #   volumes:
  #     - .:/usr/app
  #     - /usr/app/node_modules
  #   env_file:
  #     - .env
  #   environment:
  #     DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public'
  #   command: npm run start:migrate:dev
  #   ports:
  #     - ${PORT}:${PORT}
  #   depends_on:
  #     - postgres
  #   networks:
  #     - container-net

  postgres:
    container_name: '${DB_NAME}-dev'
    build: ./docker/postgres
    image: '${DB_IMAGE_NAME}-dev'
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: '/var/lib/postgresql/data/pgdata'
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ${POSTGRES_FILE_LOCATION}:/var/lib/postgresql/data
    networks:
      - container-net

  redis:
    container_name: '${REDIS_NAME}-dev'
    image: redis:7.4-alpine
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ${REDIS_FILE_LOCATION}:/data:rw
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - container-net

networks:
  container-net:
    name: container-net
    driver: bridge
